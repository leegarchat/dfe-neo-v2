
set -e
#----------------
    # Рабочее инструкции 
    # Языковая настройка доступны:
    # Английский `en`
    # Русский `ru` 
    # Индонезийский `id`
    # Китайский`zh`
    # Хинди `hi`
    
LANGUAGE=ru

#----------------
    # Опция `FORСE_START` отвечает за принудительный запуск без выбора из меню с использованием кнопок громкости. Скрипт выдаст ошибку, если конфигурация не настроена правильно. 
    # В любом из аргументов не должно быть значений `ask`. 
    # Доступны значения `false` или `true`.

FORCE_START=false

#----------------
    # Опция по установки метода патчинга `fstab`
    # Доступны следующие варианты:
        ask, auto-1..6, legacy, neov1, neov2
    # ask: 
        # Запросить метод патчинга во время установки
    # Автоматические варианты:
        # Будет использоваться метод патчинга в приорпитете:
            # auto-1:-> `legacy` -> `neov2` -> `neov1`
            # auto-2:-> `neov2` -> `legacy` -> `neov1`
            # auto-3:-> `neov2` -> `neov1`
            # auto-4:-> `neov2` -> `legacy`
            # auto-5:-> `legacy` -> `neov2`
            # auto-6:-> `legacy` -> `neov1`
            # ПРИМЕР: DFE_METHOD=auto-5
    # legacy:
        # Будут пропатчены все `fstab` файлы которые подходят по криетурию. Патч применяется `напрямую и заменяя системные файлы`. 
        # В случае если ваша `FS` имеет `RO` статус, то будет принудительно конвертирована в `EXT4 RW`: 
        # Для Legacy режима скорее всего нужно будет `отключить проверку целостности системы`
    # neov1: 
        # Данный метод патчинга основан на `magiskinit`
        # Коротко о том как он работает:
            # В ramdisk загрузочного образа внедряется дополнительный `init.rc` и `init.sh`, а так же бинарники, в каталог `ramdisk.cpio/overlay.d/sbin`
            # Этот каталог используется `magiskinit` для загрузки `magsik-bin` в системе и таким образом интегрируется magisk, но необходимо иметь magiskinit в ramdisk.cpio
            # Таким образом при каждом старте системы, будет исполняться кастомный код благодоря magiskinit и с правами root, 
            # который при каждом запуски сисетмы будет модифицировать fstab's и исполнять дополнительный код. но fstab не модифицируется напрямую.
            # `Fstab` модифицируется в временной папке, `копия fstab`. Затем `копия fstab` монтируется на место `оригинального fstab` на этапе init, `до чтения этого fstab`
    # neov2:
        # Данный метод патчинга основан на `fisrt_stage_mount` стандартаня функция Android начиная с A10
        # После ухода заданных точек монтирования во время инициализации ядра через `dtb\dtbo` разделов, 
        # производители должны указывать точки монтирования с флагом `fisrt_stage_mount` в fstab `ramdisk`, этот fstab должен быть расположен в `boot или vendor_boot`
        # Коротко о том как работает этот метод:
            # Скрипт создает `ext4` раздел в который копирует файлы из `/vendor/etc/init/hw`
            # Затем ищет необходимый fstab по упоминанию в `init*.rc файлах /../hw/*.rc`, копирует нужный `fstab` в новый `ext4 раздел`
            # Модифицирует init*.rc в котором найдена строка с монтированием раздлев из fstab. Меняет путь для `fstab` на `/vendor/etc/init/hw/${fstab_name}`
            # Затем записывает этот `ext4` раздел в `super` или в `неактивный слот vendor_boot/boot` текущей прошивки
            # Затем нужно модифицировать `fisrt_stage_mount fstab файл`, и прописать там новую точку монтирования которая будет монтировать `neo_inject` в `/vendor/etc/init/hw` тем самым подменяя все файлы на этапе запуска системы
    
    # Значение по умолчанию на мой выбор стоит auto-2

DFE_METHOD=auto-2

#----------------
    # Настройте опцию если получаете ошибку 36.1 fstab не найден. Это может произойти если переменная пропа ro.hardware отличается в TWRP и запущено системе
    # Вы можете это проверить в терминале TWRP прописав команду `getprop ro.hardware` и в запущенной системе через любой терминал, если пропы отличаются нужно вписать значение которое отображается в запущенной системе
    # В ином случае оставите значение пустым

FSTAB_EXTENSION=auto

#----------------
    # Опция отключает проверку целостности системы
    # Доступны опции false, true, ask

DISABLE_VERITY_VBMETA_PATCH=ask

#----------------
    # Опция позволяет скрыть отсутствие шифрования /data, работает только если selinux не настроен в enforcing режиме, также работает, если установлен Magisk или KernelSU
    # Доступны опции false, true, ask

HIDE_NOT_ENCRYPTED=ask

#----------------
    # *** Опция будет работать только если установлен Magisk/KernelSu или если у вас slinux=premisive
    # Кастомные пропы, будут заданы на том этапе на котором вы прописали
    # Пример использования: 
    # `CUSTOM_SETPROP="--init my.prop=value my.prop2=value my.prop3=value --early-fs my.prop=value my.prop2=value my.prop3=value"` и так далее
    # Доступтные этапы init: `--init`, `--early-fs`, `--post-fs-data`, `--boot_completed`
    # В ином случае оставьте пустым

CUSTOM_SETPROP=""

#----------------
    # Опция Добавить Собственный Список Запретов:
    # Эта опция записывает пакеты приложений в `denylist` при запуске. Работает только если установлен `Magisk`.
    # Вы можете настроить файл конфигурации вручную в `.zip/META-INF/tools/denylist.txt`.
    # Доступные варианты:  
    # `false` - отключить, 
    # `ask` - запросить во время установки,
    # `first_time_boot` - скрипт будет выполнен только один раз при первой загрузке, запись о первом использовании хранится в памяти Magisk,
    # `always_on_boot` - скрипт будет выполняться при каждой загрузке системы.

INJECT_CUSTOM_DENYLIST_IN_BOOT=ask

#----------------
    # Опция Включить Режим `Zygisk`:
    # Эта опция принудительно включает режим `zygisk` при запуске устройства, даже если `Magisk` установлен впервые.
    # Доступные варианты: 
    # `false` - отключить, `ask` - запросить во время установки,
    # `first_time_boot` - скрипт будет выполнен только один раз при первой загрузке, запись о первом использовании хранится в памяти Magisk,
    # `always_on_boot` - скрипт будет выполняться при каждой загрузке системы.

ZYGISK_TURN_ON_IN_BOOT=ask

#----------------
    # Включает встроенное исправление безопасности, встроенное в dfe-neo, которое запускается на этапе инициализации при загрузке, работает только если selinux не настроен в enforcing режиме, также работает, если установлен Magisk или KernelSU
    # Доступны опции false, true, ask

SAFETY_NET_FIX_PATCH=ask


#----------------
    # Установите значение `true`, чтобы удалить блокировку PIN, `false` - в противном случае
    # Установите значение `ask`, чтобы запросить пользователя во время установки

REMOVE_LOCKSCREEN_INFO=ask

#----------------
    # Установите значение `true`, чтобы стереть данные во время установки, `false` - в противном случае
    # Установите значение `ask`, чтобы запросить пользователя во время установки

WIPE_DATA_AFTER_INSTALL=false

#----------------
    # Эта опция указывает, нужна ли помимо подстановки fstab в --late также подстановка в --early init при монтировании разделов из fstab. --early mount включает все разделы, кроме тех, у которых установлены флаги fisrt_stage_mount и latemount.
    # По умолчанию установлено false.
    # Если установлено в `ask`, скрипт запросит пользователя выбрать опцию при установке.

MOUNT_FSTAB_EARLY_TOO=ask

#----------------
    # Блок настройки для удаления или замены паттернов в fstab. Оставьте по умолчанию, если не знаете для чего вам это нужно.
    #   `-m` указывает строку точки монтирования, в которой нужно удалить паттерны. Например, `-m /data`. После этого флага нужно указать `-r и/или -p`.
    #   `-r` указывает, какие паттерны нужно удалить. Паттерны будут удалены до запятой или пробела. Например:
    #        /.../userdata	/data	f2fs	noatime,....,inlinecrypt	wait,....,fileencryption=aes-256-xts:aes-256-cts:v2,....,fscompress
    #        с `-m /data -r fileencryption= inlinecrypt` будет удалено fileencryption=aes-256-xts:aes-256-cts:v2. Получится строка:
    #        /.../userdata	/data	f2fs	noatime,....	wait,....,....,fscompress
    #   `-p` указывает, какие паттерны нужно заменить. Например, `-m /data -p inlinecrypt--to--ecrypt`. Получится следующее:
    #        /.../userdata	/data	f2fs	noatime,....,ecrypt	wait,....,fileencryption=aes-256-xts:aes-256-cts:v2,....,fscompress
    #        Можно указать несколько параметров `-p inlinecrypt--to--ecrypt fileencryption--to--notencryption`
    #   `-v` При указании этого флага, все строки в fstab, начинающиеся с `overlay`, будут закомментированы, тем самым отключив системный overlay от производителя. Для ощущения эффекта установите true для опции modify_early_mount.
    #   Пример заполнения:
    #        "-m /data -p fileencryption--to--notencrypteble ice--to--not-ice -r forceencrypt= -m /system -p ro--to--rw -m /metadata -r keydirectory="
    #        Значение по умолчанию: "-m /data -r fileencryption= forcefdeorfbe= encryptable= forceencrypt= metadata_encryption= keydirectory= inlinecrypt quota wrappedkey"

FSTAB_PATCH_PATERNS="-m /data -r fileencryption= forcefdeorfbe= encryptable= forceencrypt= metadata_encryption= keydirectory= inlinecrypt quota wrappedkey"

#----------------
    # Секция конфигурации: Опции внедрения
    #  `WHERE_TO_INJECT`: Эта опция определяет, куда будет внедрен модуль. Выберите один из вариантов:
    #      `super`: Модуль будет прошит в текущий слот рядом с системой, вендором и т. д.
    #      `vendor_boot`: Модуль будет прошит в неактивный слот vendor_boot (недоступно для устройств только с A-разделением).
    #      `boot`: Модуль будет прошит в неактивный слот boot (недоступно для устройств только с A-разделением).

WHERE_TO_INJECT=auto

#----------------
    #  `magisk`: Укажите версию Magisk для установки или оставьте поле пустым.
    #      Доступные версии:
    #                       Magisk-Delta-v26.4
    #                       Magisk-Delta-v27.0
    #                       Magisk-kitsune-v27-R65C33E4F
    #                       Magisk-v26.4-kitsune-2
    #                       Magisk-v26.4
    #                       Magisk-v27.0
    #      Пример: magisk Magisk-v27.0
    #      Чтобы установить Magisk из того же каталога, что и neo.zip, добавьте префикс "EXT:", например, "EXT:Magisk-v24.3.zip".
   
INSTALL_MAGISK=